// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: report.proto

#ifndef PROTOBUF_report_2eproto__INCLUDED
#define PROTOBUF_report_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace gorynych {
namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_report_2eproto();
void protobuf_InitDefaults_report_2eproto();
void protobuf_AssignDesc_report_2eproto();
void protobuf_ShutdownFile_report_2eproto();

class Report;
class Report_Report_Start;
class Report_Report_Statistics;
class Report_Report_Stop;

enum Report_Report_Type {
  Report_Report_Type_REPORT_START = 0,
  Report_Report_Type_REPORT_STOP = 1,
  Report_Report_Type_REPORT_STATISTICS = 2
};
bool Report_Report_Type_IsValid(int value);
const Report_Report_Type Report_Report_Type_Report_Type_MIN = Report_Report_Type_REPORT_START;
const Report_Report_Type Report_Report_Type_Report_Type_MAX = Report_Report_Type_REPORT_STATISTICS;
const int Report_Report_Type_Report_Type_ARRAYSIZE = Report_Report_Type_Report_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Report_Report_Type_descriptor();
inline const ::std::string& Report_Report_Type_Name(Report_Report_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Report_Report_Type_descriptor(), value);
}
inline bool Report_Report_Type_Parse(
    const ::std::string& name, Report_Report_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Report_Report_Type>(
    Report_Report_Type_descriptor(), name, value);
}
// ===================================================================

class Report_Report_Statistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gorynych.protobuf.Report.Report_Statistics) */ {
 public:
  Report_Report_Statistics();
  virtual ~Report_Report_Statistics();

  Report_Report_Statistics(const Report_Report_Statistics& from);

  inline Report_Report_Statistics& operator=(const Report_Report_Statistics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Report_Report_Statistics& default_instance();

  static const Report_Report_Statistics* internal_default_instance();

  void Swap(Report_Report_Statistics* other);

  // implements Message ----------------------------------------------

  inline Report_Report_Statistics* New() const { return New(NULL); }

  Report_Report_Statistics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Report_Report_Statistics& from);
  void MergeFrom(const Report_Report_Statistics& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Report_Report_Statistics* other);
  void UnsafeMergeFrom(const Report_Report_Statistics& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed32 sd_count = 1;
  bool has_sd_count() const;
  void clear_sd_count();
  static const int kSdCountFieldNumber = 1;
  ::google::protobuf::uint32 sd_count() const;
  void set_sd_count(::google::protobuf::uint32 value);

  // required fixed32 sd_chain_count = 2;
  bool has_sd_chain_count() const;
  void clear_sd_chain_count();
  static const int kSdChainCountFieldNumber = 2;
  ::google::protobuf::uint32 sd_chain_count() const;
  void set_sd_chain_count(::google::protobuf::uint32 value);

  // required fixed64 average_size_sd = 3;
  bool has_average_size_sd() const;
  void clear_average_size_sd();
  static const int kAverageSizeSdFieldNumber = 3;
  ::google::protobuf::uint64 average_size_sd() const;
  void set_average_size_sd(::google::protobuf::uint64 value);

  // required fixed64 average_size_sd_chain = 4;
  bool has_average_size_sd_chain() const;
  void clear_average_size_sd_chain();
  static const int kAverageSizeSdChainFieldNumber = 4;
  ::google::protobuf::uint64 average_size_sd_chain() const;
  void set_average_size_sd_chain(::google::protobuf::uint64 value);

  // required fixed64 average_latency_sd = 5;
  bool has_average_latency_sd() const;
  void clear_average_latency_sd();
  static const int kAverageLatencySdFieldNumber = 5;
  ::google::protobuf::uint64 average_latency_sd() const;
  void set_average_latency_sd(::google::protobuf::uint64 value);

  // required fixed64 average_latency_sd_chain = 6;
  bool has_average_latency_sd_chain() const;
  void clear_average_latency_sd_chain();
  static const int kAverageLatencySdChainFieldNumber = 6;
  ::google::protobuf::uint64 average_latency_sd_chain() const;
  void set_average_latency_sd_chain(::google::protobuf::uint64 value);

  // required fixed64 timestamp = 7;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 7;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:gorynych.protobuf.Report.Report_Statistics)
 private:
  inline void set_has_sd_count();
  inline void clear_has_sd_count();
  inline void set_has_sd_chain_count();
  inline void clear_has_sd_chain_count();
  inline void set_has_average_size_sd();
  inline void clear_has_average_size_sd();
  inline void set_has_average_size_sd_chain();
  inline void clear_has_average_size_sd_chain();
  inline void set_has_average_latency_sd();
  inline void clear_has_average_latency_sd();
  inline void set_has_average_latency_sd_chain();
  inline void clear_has_average_latency_sd_chain();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 sd_count_;
  ::google::protobuf::uint32 sd_chain_count_;
  ::google::protobuf::uint64 average_size_sd_;
  ::google::protobuf::uint64 average_size_sd_chain_;
  ::google::protobuf::uint64 average_latency_sd_;
  ::google::protobuf::uint64 average_latency_sd_chain_;
  ::google::protobuf::uint64 timestamp_;
  friend void  protobuf_InitDefaults_report_2eproto_impl();
  friend void  protobuf_AddDesc_report_2eproto_impl();
  friend void protobuf_AssignDesc_report_2eproto();
  friend void protobuf_ShutdownFile_report_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Report_Report_Statistics> Report_Report_Statistics_default_instance_;

// -------------------------------------------------------------------

class Report_Report_Start : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gorynych.protobuf.Report.Report_Start) */ {
 public:
  Report_Report_Start();
  virtual ~Report_Report_Start();

  Report_Report_Start(const Report_Report_Start& from);

  inline Report_Report_Start& operator=(const Report_Report_Start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Report_Report_Start& default_instance();

  static const Report_Report_Start* internal_default_instance();

  void Swap(Report_Report_Start* other);

  // implements Message ----------------------------------------------

  inline Report_Report_Start* New() const { return New(NULL); }

  Report_Report_Start* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Report_Report_Start& from);
  void MergeFrom(const Report_Report_Start& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Report_Report_Start* other);
  void UnsafeMergeFrom(const Report_Report_Start& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  ::google::protobuf::uint64 start_time() const;
  void set_start_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:gorynych.protobuf.Report.Report_Start)
 private:
  inline void set_has_start_time();
  inline void clear_has_start_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_time_;
  friend void  protobuf_InitDefaults_report_2eproto_impl();
  friend void  protobuf_AddDesc_report_2eproto_impl();
  friend void protobuf_AssignDesc_report_2eproto();
  friend void protobuf_ShutdownFile_report_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Report_Report_Start> Report_Report_Start_default_instance_;

// -------------------------------------------------------------------

class Report_Report_Stop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gorynych.protobuf.Report.Report_Stop) */ {
 public:
  Report_Report_Stop();
  virtual ~Report_Report_Stop();

  Report_Report_Stop(const Report_Report_Stop& from);

  inline Report_Report_Stop& operator=(const Report_Report_Stop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Report_Report_Stop& default_instance();

  static const Report_Report_Stop* internal_default_instance();

  void Swap(Report_Report_Stop* other);

  // implements Message ----------------------------------------------

  inline Report_Report_Stop* New() const { return New(NULL); }

  Report_Report_Stop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Report_Report_Stop& from);
  void MergeFrom(const Report_Report_Stop& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Report_Report_Stop* other);
  void UnsafeMergeFrom(const Report_Report_Stop& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required fixed64 stop_time = 1;
  bool has_stop_time() const;
  void clear_stop_time();
  static const int kStopTimeFieldNumber = 1;
  ::google::protobuf::uint64 stop_time() const;
  void set_stop_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:gorynych.protobuf.Report.Report_Stop)
 private:
  inline void set_has_stop_time();
  inline void clear_has_stop_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 stop_time_;
  friend void  protobuf_InitDefaults_report_2eproto_impl();
  friend void  protobuf_AddDesc_report_2eproto_impl();
  friend void protobuf_AssignDesc_report_2eproto();
  friend void protobuf_ShutdownFile_report_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Report_Report_Stop> Report_Report_Stop_default_instance_;

// -------------------------------------------------------------------

class Report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gorynych.protobuf.Report) */ {
 public:
  Report();
  virtual ~Report();

  Report(const Report& from);

  inline Report& operator=(const Report& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Report& default_instance();

  static const Report* internal_default_instance();

  void Swap(Report* other);

  // implements Message ----------------------------------------------

  inline Report* New() const { return New(NULL); }

  Report* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Report& from);
  void MergeFrom(const Report& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Report* other);
  void UnsafeMergeFrom(const Report& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Report_Report_Statistics Report_Statistics;
  typedef Report_Report_Start Report_Start;
  typedef Report_Report_Stop Report_Stop;

  typedef Report_Report_Type Report_Type;
  static const Report_Type REPORT_START =
    Report_Report_Type_REPORT_START;
  static const Report_Type REPORT_STOP =
    Report_Report_Type_REPORT_STOP;
  static const Report_Type REPORT_STATISTICS =
    Report_Report_Type_REPORT_STATISTICS;
  static inline bool Report_Type_IsValid(int value) {
    return Report_Report_Type_IsValid(value);
  }
  static const Report_Type Report_Type_MIN =
    Report_Report_Type_Report_Type_MIN;
  static const Report_Type Report_Type_MAX =
    Report_Report_Type_Report_Type_MAX;
  static const int Report_Type_ARRAYSIZE =
    Report_Report_Type_Report_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Report_Type_descriptor() {
    return Report_Report_Type_descriptor();
  }
  static inline const ::std::string& Report_Type_Name(Report_Type value) {
    return Report_Report_Type_Name(value);
  }
  static inline bool Report_Type_Parse(const ::std::string& name,
      Report_Type* value) {
    return Report_Report_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .gorynych.protobuf.Report.Report_Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::gorynych::protobuf::Report_Report_Type type() const;
  void set_type(::gorynych::protobuf::Report_Report_Type value);

  // optional .gorynych.protobuf.Report.Report_Statistics report_statistics = 2;
  bool has_report_statistics() const;
  void clear_report_statistics();
  static const int kReportStatisticsFieldNumber = 2;
  const ::gorynych::protobuf::Report_Report_Statistics& report_statistics() const;
  ::gorynych::protobuf::Report_Report_Statistics* mutable_report_statistics();
  ::gorynych::protobuf::Report_Report_Statistics* release_report_statistics();
  void set_allocated_report_statistics(::gorynych::protobuf::Report_Report_Statistics* report_statistics);

  // optional .gorynych.protobuf.Report.Report_Start report_start = 3;
  bool has_report_start() const;
  void clear_report_start();
  static const int kReportStartFieldNumber = 3;
  const ::gorynych::protobuf::Report_Report_Start& report_start() const;
  ::gorynych::protobuf::Report_Report_Start* mutable_report_start();
  ::gorynych::protobuf::Report_Report_Start* release_report_start();
  void set_allocated_report_start(::gorynych::protobuf::Report_Report_Start* report_start);

  // optional .gorynych.protobuf.Report.Report_Stop report_stop = 4;
  bool has_report_stop() const;
  void clear_report_stop();
  static const int kReportStopFieldNumber = 4;
  const ::gorynych::protobuf::Report_Report_Stop& report_stop() const;
  ::gorynych::protobuf::Report_Report_Stop* mutable_report_stop();
  ::gorynych::protobuf::Report_Report_Stop* release_report_stop();
  void set_allocated_report_stop(::gorynych::protobuf::Report_Report_Stop* report_stop);

  // @@protoc_insertion_point(class_scope:gorynych.protobuf.Report)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_report_statistics();
  inline void clear_has_report_statistics();
  inline void set_has_report_start();
  inline void clear_has_report_start();
  inline void set_has_report_stop();
  inline void clear_has_report_stop();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::gorynych::protobuf::Report_Report_Statistics* report_statistics_;
  ::gorynych::protobuf::Report_Report_Start* report_start_;
  ::gorynych::protobuf::Report_Report_Stop* report_stop_;
  int type_;
  friend void  protobuf_InitDefaults_report_2eproto_impl();
  friend void  protobuf_AddDesc_report_2eproto_impl();
  friend void protobuf_AssignDesc_report_2eproto();
  friend void protobuf_ShutdownFile_report_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Report> Report_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Report_Report_Statistics

// required fixed32 sd_count = 1;
inline bool Report_Report_Statistics::has_sd_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Report_Report_Statistics::set_has_sd_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Report_Report_Statistics::clear_has_sd_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Report_Report_Statistics::clear_sd_count() {
  sd_count_ = 0u;
  clear_has_sd_count();
}
inline ::google::protobuf::uint32 Report_Report_Statistics::sd_count() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Statistics.sd_count)
  return sd_count_;
}
inline void Report_Report_Statistics::set_sd_count(::google::protobuf::uint32 value) {
  set_has_sd_count();
  sd_count_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Statistics.sd_count)
}

// required fixed32 sd_chain_count = 2;
inline bool Report_Report_Statistics::has_sd_chain_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Report_Report_Statistics::set_has_sd_chain_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Report_Report_Statistics::clear_has_sd_chain_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Report_Report_Statistics::clear_sd_chain_count() {
  sd_chain_count_ = 0u;
  clear_has_sd_chain_count();
}
inline ::google::protobuf::uint32 Report_Report_Statistics::sd_chain_count() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Statistics.sd_chain_count)
  return sd_chain_count_;
}
inline void Report_Report_Statistics::set_sd_chain_count(::google::protobuf::uint32 value) {
  set_has_sd_chain_count();
  sd_chain_count_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Statistics.sd_chain_count)
}

// required fixed64 average_size_sd = 3;
inline bool Report_Report_Statistics::has_average_size_sd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Report_Report_Statistics::set_has_average_size_sd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Report_Report_Statistics::clear_has_average_size_sd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Report_Report_Statistics::clear_average_size_sd() {
  average_size_sd_ = GOOGLE_ULONGLONG(0);
  clear_has_average_size_sd();
}
inline ::google::protobuf::uint64 Report_Report_Statistics::average_size_sd() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Statistics.average_size_sd)
  return average_size_sd_;
}
inline void Report_Report_Statistics::set_average_size_sd(::google::protobuf::uint64 value) {
  set_has_average_size_sd();
  average_size_sd_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Statistics.average_size_sd)
}

// required fixed64 average_size_sd_chain = 4;
inline bool Report_Report_Statistics::has_average_size_sd_chain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Report_Report_Statistics::set_has_average_size_sd_chain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Report_Report_Statistics::clear_has_average_size_sd_chain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Report_Report_Statistics::clear_average_size_sd_chain() {
  average_size_sd_chain_ = GOOGLE_ULONGLONG(0);
  clear_has_average_size_sd_chain();
}
inline ::google::protobuf::uint64 Report_Report_Statistics::average_size_sd_chain() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Statistics.average_size_sd_chain)
  return average_size_sd_chain_;
}
inline void Report_Report_Statistics::set_average_size_sd_chain(::google::protobuf::uint64 value) {
  set_has_average_size_sd_chain();
  average_size_sd_chain_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Statistics.average_size_sd_chain)
}

// required fixed64 average_latency_sd = 5;
inline bool Report_Report_Statistics::has_average_latency_sd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Report_Report_Statistics::set_has_average_latency_sd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Report_Report_Statistics::clear_has_average_latency_sd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Report_Report_Statistics::clear_average_latency_sd() {
  average_latency_sd_ = GOOGLE_ULONGLONG(0);
  clear_has_average_latency_sd();
}
inline ::google::protobuf::uint64 Report_Report_Statistics::average_latency_sd() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Statistics.average_latency_sd)
  return average_latency_sd_;
}
inline void Report_Report_Statistics::set_average_latency_sd(::google::protobuf::uint64 value) {
  set_has_average_latency_sd();
  average_latency_sd_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Statistics.average_latency_sd)
}

// required fixed64 average_latency_sd_chain = 6;
inline bool Report_Report_Statistics::has_average_latency_sd_chain() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Report_Report_Statistics::set_has_average_latency_sd_chain() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Report_Report_Statistics::clear_has_average_latency_sd_chain() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Report_Report_Statistics::clear_average_latency_sd_chain() {
  average_latency_sd_chain_ = GOOGLE_ULONGLONG(0);
  clear_has_average_latency_sd_chain();
}
inline ::google::protobuf::uint64 Report_Report_Statistics::average_latency_sd_chain() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Statistics.average_latency_sd_chain)
  return average_latency_sd_chain_;
}
inline void Report_Report_Statistics::set_average_latency_sd_chain(::google::protobuf::uint64 value) {
  set_has_average_latency_sd_chain();
  average_latency_sd_chain_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Statistics.average_latency_sd_chain)
}

// required fixed64 timestamp = 7;
inline bool Report_Report_Statistics::has_timestamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Report_Report_Statistics::set_has_timestamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Report_Report_Statistics::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Report_Report_Statistics::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Report_Report_Statistics::timestamp() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Statistics.timestamp)
  return timestamp_;
}
inline void Report_Report_Statistics::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Statistics.timestamp)
}

inline const Report_Report_Statistics* Report_Report_Statistics::internal_default_instance() {
  return &Report_Report_Statistics_default_instance_.get();
}
// -------------------------------------------------------------------

// Report_Report_Start

// required fixed64 start_time = 1;
inline bool Report_Report_Start::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Report_Report_Start::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Report_Report_Start::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Report_Report_Start::clear_start_time() {
  start_time_ = GOOGLE_ULONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::uint64 Report_Report_Start::start_time() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Start.start_time)
  return start_time_;
}
inline void Report_Report_Start::set_start_time(::google::protobuf::uint64 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Start.start_time)
}

inline const Report_Report_Start* Report_Report_Start::internal_default_instance() {
  return &Report_Report_Start_default_instance_.get();
}
// -------------------------------------------------------------------

// Report_Report_Stop

// required fixed64 stop_time = 1;
inline bool Report_Report_Stop::has_stop_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Report_Report_Stop::set_has_stop_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Report_Report_Stop::clear_has_stop_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Report_Report_Stop::clear_stop_time() {
  stop_time_ = GOOGLE_ULONGLONG(0);
  clear_has_stop_time();
}
inline ::google::protobuf::uint64 Report_Report_Stop::stop_time() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.Report_Stop.stop_time)
  return stop_time_;
}
inline void Report_Report_Stop::set_stop_time(::google::protobuf::uint64 value) {
  set_has_stop_time();
  stop_time_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.Report_Stop.stop_time)
}

inline const Report_Report_Stop* Report_Report_Stop::internal_default_instance() {
  return &Report_Report_Stop_default_instance_.get();
}
// -------------------------------------------------------------------

// Report

// required .gorynych.protobuf.Report.Report_Type type = 1;
inline bool Report::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Report::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Report::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Report::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::gorynych::protobuf::Report_Report_Type Report::type() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.type)
  return static_cast< ::gorynych::protobuf::Report_Report_Type >(type_);
}
inline void Report::set_type(::gorynych::protobuf::Report_Report_Type value) {
  assert(::gorynych::protobuf::Report_Report_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:gorynych.protobuf.Report.type)
}

// optional .gorynych.protobuf.Report.Report_Statistics report_statistics = 2;
inline bool Report::has_report_statistics() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Report::set_has_report_statistics() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Report::clear_has_report_statistics() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Report::clear_report_statistics() {
  if (report_statistics_ != NULL) report_statistics_->::gorynych::protobuf::Report_Report_Statistics::Clear();
  clear_has_report_statistics();
}
inline const ::gorynych::protobuf::Report_Report_Statistics& Report::report_statistics() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.report_statistics)
  return report_statistics_ != NULL ? *report_statistics_
                         : *::gorynych::protobuf::Report_Report_Statistics::internal_default_instance();
}
inline ::gorynych::protobuf::Report_Report_Statistics* Report::mutable_report_statistics() {
  set_has_report_statistics();
  if (report_statistics_ == NULL) {
    report_statistics_ = new ::gorynych::protobuf::Report_Report_Statistics;
  }
  // @@protoc_insertion_point(field_mutable:gorynych.protobuf.Report.report_statistics)
  return report_statistics_;
}
inline ::gorynych::protobuf::Report_Report_Statistics* Report::release_report_statistics() {
  // @@protoc_insertion_point(field_release:gorynych.protobuf.Report.report_statistics)
  clear_has_report_statistics();
  ::gorynych::protobuf::Report_Report_Statistics* temp = report_statistics_;
  report_statistics_ = NULL;
  return temp;
}
inline void Report::set_allocated_report_statistics(::gorynych::protobuf::Report_Report_Statistics* report_statistics) {
  delete report_statistics_;
  report_statistics_ = report_statistics;
  if (report_statistics) {
    set_has_report_statistics();
  } else {
    clear_has_report_statistics();
  }
  // @@protoc_insertion_point(field_set_allocated:gorynych.protobuf.Report.report_statistics)
}

// optional .gorynych.protobuf.Report.Report_Start report_start = 3;
inline bool Report::has_report_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Report::set_has_report_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Report::clear_has_report_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Report::clear_report_start() {
  if (report_start_ != NULL) report_start_->::gorynych::protobuf::Report_Report_Start::Clear();
  clear_has_report_start();
}
inline const ::gorynych::protobuf::Report_Report_Start& Report::report_start() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.report_start)
  return report_start_ != NULL ? *report_start_
                         : *::gorynych::protobuf::Report_Report_Start::internal_default_instance();
}
inline ::gorynych::protobuf::Report_Report_Start* Report::mutable_report_start() {
  set_has_report_start();
  if (report_start_ == NULL) {
    report_start_ = new ::gorynych::protobuf::Report_Report_Start;
  }
  // @@protoc_insertion_point(field_mutable:gorynych.protobuf.Report.report_start)
  return report_start_;
}
inline ::gorynych::protobuf::Report_Report_Start* Report::release_report_start() {
  // @@protoc_insertion_point(field_release:gorynych.protobuf.Report.report_start)
  clear_has_report_start();
  ::gorynych::protobuf::Report_Report_Start* temp = report_start_;
  report_start_ = NULL;
  return temp;
}
inline void Report::set_allocated_report_start(::gorynych::protobuf::Report_Report_Start* report_start) {
  delete report_start_;
  report_start_ = report_start;
  if (report_start) {
    set_has_report_start();
  } else {
    clear_has_report_start();
  }
  // @@protoc_insertion_point(field_set_allocated:gorynych.protobuf.Report.report_start)
}

// optional .gorynych.protobuf.Report.Report_Stop report_stop = 4;
inline bool Report::has_report_stop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Report::set_has_report_stop() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Report::clear_has_report_stop() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Report::clear_report_stop() {
  if (report_stop_ != NULL) report_stop_->::gorynych::protobuf::Report_Report_Stop::Clear();
  clear_has_report_stop();
}
inline const ::gorynych::protobuf::Report_Report_Stop& Report::report_stop() const {
  // @@protoc_insertion_point(field_get:gorynych.protobuf.Report.report_stop)
  return report_stop_ != NULL ? *report_stop_
                         : *::gorynych::protobuf::Report_Report_Stop::internal_default_instance();
}
inline ::gorynych::protobuf::Report_Report_Stop* Report::mutable_report_stop() {
  set_has_report_stop();
  if (report_stop_ == NULL) {
    report_stop_ = new ::gorynych::protobuf::Report_Report_Stop;
  }
  // @@protoc_insertion_point(field_mutable:gorynych.protobuf.Report.report_stop)
  return report_stop_;
}
inline ::gorynych::protobuf::Report_Report_Stop* Report::release_report_stop() {
  // @@protoc_insertion_point(field_release:gorynych.protobuf.Report.report_stop)
  clear_has_report_stop();
  ::gorynych::protobuf::Report_Report_Stop* temp = report_stop_;
  report_stop_ = NULL;
  return temp;
}
inline void Report::set_allocated_report_stop(::gorynych::protobuf::Report_Report_Stop* report_stop) {
  delete report_stop_;
  report_stop_ = report_stop;
  if (report_stop) {
    set_has_report_stop();
  } else {
    clear_has_report_stop();
  }
  // @@protoc_insertion_point(field_set_allocated:gorynych.protobuf.Report.report_stop)
}

inline const Report* Report::internal_default_instance() {
  return &Report_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace gorynych

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gorynych::protobuf::Report_Report_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gorynych::protobuf::Report_Report_Type>() {
  return ::gorynych::protobuf::Report_Report_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_report_2eproto__INCLUDED
